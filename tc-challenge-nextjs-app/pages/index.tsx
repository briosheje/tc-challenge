import { GetServerSideProps, InferGetServerSidePropsType } from "next";
import Head from "next/head";
import Image from "next/image";
import dynamic from "next/dynamic";
import Box from "@mui/material/Box";
import { Stack } from "@mui/system";

import {
  AppBar,
  Card,
  CardContent,
  CssBaseline,
  Toolbar,
  Typography,
} from "@mui/material";
import styles from "../styles/Home.module.css";
import RandomString from "../ui/components/random-string";

const TechnologiesList = dynamic(
  () => import("../ui/components/technologies-list"),
  {
    ssr: false,
  }
);

const TechnologiesListSlider = dynamic(
  () => import("../ui/components/technologies-list-slider"),
  {
    ssr: false,
  }
);

type HomeProps = {
  content: string;
};
export const getServerSideProps: GetServerSideProps<HomeProps> = async (
  context
) => {
  const helloWorldApiResponse = await fetch(`${process.env.API_BASE_URL}/home`);
  const json = (await helloWorldApiResponse.json()) as HomeProps;

  return {
    props: {
      content: json.content,
    },
  };
};

export default function Home(
  props: InferGetServerSidePropsType<typeof getServerSideProps>
) {
  const { content } = props;

  return (
    <>
      <CssBaseline />
      <Box sx={{ flexGrow: 1 }}>
        <AppBar position="static">
          <Toolbar>
            <Typography variant="h6" component="div" sx={{ flexGrow: 1 }}>
              Just an hello world demo
            </Typography>
          </Toolbar>
        </AppBar>
      </Box>
      <div className={styles.container}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className={styles.main}>
          <section>
            <Card variant="outlined" style={{ minWidth: 360 }}>
              <CardContent>
                <Typography
                  sx={{ fontSize: 14 }}
                  color="text.secondary"
                  gutterBottom
                >
                  Side note: some content of this card is not subject to SSR.
                </Typography>
                <Typography variant="body1">
                  Technologies used for this demo:
                </Typography>
                <TechnologiesList />
                <TechnologiesListSlider />
              </CardContent>
            </Card>
          </section>
          <section>
            <Card variant="outlined">
              <CardContent>
                Content of the challenge (coming from SSR): {content}
              </CardContent>
            </Card>
          </section>
          <section>
            <Card variant="outlined">
              <CardContent>
                <Stack>
                  <Typography variant="body2">
                    The box below fetches from the public api
                    (/api/random-string) a random string and writes it down
                    here:
                  </Typography>
                  <RandomString />
                </Stack>
              </CardContent>
            </Card>
          </section>
        </main>

        <footer className={styles.footer}>
          <a
            href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            Powered by{" "}
            <span className={styles.logo}>
              <Image
                src="/vercel.svg"
                alt="Vercel Logo"
                width={72}
                height={16}
              />
            </span>
          </a>
        </footer>
      </div>
    </>
  );
}
